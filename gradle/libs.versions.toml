[versions]
spring-boot = "3.1.4"
mapstruct = "1.5.5.Final"
test-containers = "1.19.1"
jwt = "0.11.5"

[plugins]
spring = { id = "org.springframework.boot", version.ref = "spring-boot" }

[libraries]
#Spring Boot libraries
spring-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
spring-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot" }
spring-websocket = { module = "org.springframework.boot:spring-boot-starter-websocket", version.ref = "spring-boot" }
spring-thymeleaf = { module = "org.springframework.boot:spring-boot-starter-thymeleaf", version.ref = "spring-boot" }
spring-kafka = { module = "org.springframework.kafka:spring-kafka", version = "3.0.16"}

#Additional libraries
javax-annotation = { module = "javax.annotation:javax.annotation-api", version = "1.3.2" }
lombok = { module = "org.projectlombok:lombok", version = "1.18.26" }
liquibase = { module = "org.liquibase:liquibase-core", version = "4.22.0" }
postgresql-driver = { module = "org.postgresql:postgresql", version = "42.6.0" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
jwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jwt"}
jwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jwt"}
jwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jwt"}
hibernate-spatial = { module = "org.hibernate:hibernate-spatial", version = "6.5.2.Final"}