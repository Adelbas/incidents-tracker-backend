version: '3.8'
services:
  api-gateway:
    build: /api-gateway
    restart: always
    pull_policy: build
    depends_on:
      - db
      - kafka1
      - kafka2
    environment:
      - SERVER_PORT=8080
      - DB_HOST=db
      - DB_PORT=5432
      - DB_SCHEMA=public
      - DB_DATABASE=incidents_api
      - DATASOURCE_USERNAME=postgres
      - DATASOURCE_PASSWORD=postgres
      - KAFKA_BOOTSTRAP_SERVERS=kafka1:29092,kafka2:29092
      - KAFKA_CONSUMER_GROUP_ID=api-gateway
      - LOCATION_TRACKER_HOST=location-tracker
      - LOCATION_TRACKER_PORT=8081
    ports:
      - '8080:8080'

  location-tracker:
    build: /location-tracker
    restart: always
    pull_policy: build
    depends_on:
      - db
      - kafka1
      - kafka2
    environment:
      - SERVER_PORT=8081
      - DB_HOST=db
      - DB_PORT=5432
      - DB_SCHEMA=public
      - DB_PARTMAN_SCHEMA=partman
      - DB_DATABASE=incidents_location
      - DATASOURCE_USERNAME=postgres
      - DATASOURCE_PASSWORD=postgres
      - KAFKA_BOOTSTRAP_SERVERS=kafka1:29092,kafka2:29092
      - KAFKA_CONSUMER_GROUP_ID=location-tracker
    ports:
      - '8081:8081'

  db:
    build: docker/db/
    restart: always
    environment:
      - TZ=Europe/Moscow
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5434:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./docker/pg-init-scripts:/docker-entrypoint-initdb.d

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      start_period: 10s
      retries: 20
      interval: 10s

  kafka1:
    image: confluentinc/cp-kafka:7.3.1
    hostname: kafka1
    container_name: kafka1
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - '9092:9092'
      - '9101:9101'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  kafka2:
    image: confluentinc/cp-kafka:7.3.1
    hostname: kafka2
    container_name: kafka2
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - '9093:9093'
      - '9102:9102'
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_JMX_PORT: 9102
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: nc -z localhost 9093 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

volumes:
  db:
    driver: local